{"version":3,"sources":["FBShareOpenGraphValueContainer.js"],"names":["ShareOpenGraphValueContainer","properties","_properties","key","number","type","value","object","photo","string","module","exports"],"mappings":"AAuBA,a,0WAcMA,CAAAA,4B,YAGJ,sCAAYC,UAAZ,CAA8C,yHAC5C,KAAKC,WAAL,CAAmBD,UAAU,CAAGA,UAAH,CAAgB,EAA7C,CACD,C,kGAKSE,G,CAAaC,M,CAAgB,CACrC,KAAKF,WAAL,CAAiBC,GAAjB,EAAwB,CAACE,IAAI,CAAE,QAAP,CAAiBC,KAAK,CAAEF,MAAxB,CAAxB,CACD,C,4CAKSD,G,CAAaI,M,CAAsC,CAC3D,KAAKL,WAAL,CAAiBC,GAAjB,EAAwB,CAACE,IAAI,CAAE,mBAAP,CAA4BC,KAAK,CAAEC,MAAnC,CAAxB,CACD,C,0CAKQJ,G,CAAaK,K,CAAmB,CACvC,KAAKN,WAAL,CAAiBC,GAAjB,EAAwB,CAACE,IAAI,CAAE,OAAP,CAAgBC,KAAK,CAAEE,KAAvB,CAAxB,CACD,C,4CAKSL,G,CAAaM,M,CAAgB,CACrC,KAAKP,WAAL,CAAiBC,GAAjB,EAAwB,CAACE,IAAI,CAAE,QAAP,CAAiBC,KAAK,CAAEG,MAAxB,CAAxB,CACD,C,0CAKQN,G,CAA6B,CACpC,MAAO,MAAKD,WAAL,CAAiBC,GAAjB,CAAP,CACD,C,4CAGHO,MAAM,CAACC,OAAP,CAAiBX,4BAAjB","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc. All rights reserved.\n *\n * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,\n * copy, modify, and distribute this software in source code or binary form for use\n * in connection with the web services and APIs provided by Facebook.\n *\n * As with any software that integrates with the Facebook platform, your use of\n * this software is subject to the Facebook Developer Principles and Policies\n * [http://developers.facebook.com/policy/]. This copyright notice shall be\n * included in all copies or substantial portions of the software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nimport type {SharePhoto} from './FBSharePhoto';\n\ntype OpenGraphProperties = {[key: string]: OpenGraphValue};\ntype OpenGraphValue = {\n  type: OpenGraphValueType,\n  value: any,\n};\ntype OpenGraphValueType = 'number' | 'open-graph-object' | 'photo' | 'string';\n\n/**\n * Represents an interface for adding and retrieving values to open graph objects and actions.\n */\nclass ShareOpenGraphValueContainer {\n  _properties: OpenGraphProperties;\n\n  constructor(properties: ?OpenGraphProperties) {\n    this._properties = properties ? properties : {};\n  }\n\n  /**\n   * Sets a number for the specified key.\n   */\n  putNumber(key: string, number: number) {\n    this._properties[key] = {type: 'number', value: number};\n  }\n\n  /**\n   * Sets an open graph object for the specified key.\n   */\n  putObject(key: string, object: ShareOpenGraphValueContainer) {\n    this._properties[key] = {type: 'open-graph-object', value: object};\n  }\n\n  /**\n   * Sets a photo for the specified key.\n   */\n  putPhoto(key: string, photo: SharePhoto) {\n    this._properties[key] = {type: 'photo', value: photo};\n  }\n\n  /**\n   * Sets a string for the specified key.\n   */\n  putString(key: string, string: string) {\n    this._properties[key] = {type: 'string', value: string};\n  }\n\n  /**\n   * Gets an entry for the given key.\n   */\n  getEntry(key: string): OpenGraphValue {\n    return this._properties[key];\n  }\n}\n\nmodule.exports = ShareOpenGraphValueContainer;\n"]}