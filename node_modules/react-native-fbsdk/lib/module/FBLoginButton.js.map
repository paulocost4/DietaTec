{"version":3,"sources":["FBLoginButton.js"],"names":["LoginButton","event","eventDict","nativeEvent","type","props","onLoginFinished","error","result","onLogoutFinished","_eventHandler","bind","React","Component","styles","StyleSheet","create","defaultButtonStyle","height","width","defaultProps","style","RCTFBLoginButton","module","exports"],"mappings":"AAsBA,a,gzBAEA,oDACA,yC,qFAcMA,CAAAA,W,qWA2CUC,K,CAAc,CAC1B,GAAMC,CAAAA,SAAS,CAAGD,KAAK,CAACE,WAAxB,CACA,GAAID,SAAS,CAACE,IAAV,GAAmB,eAAvB,CAAwC,CACtC,GAAI,KAAKC,KAAL,CAAWC,eAAf,CAAgC,CAC9B,KAAKD,KAAL,CAAWC,eAAX,CAA2BJ,SAAS,CAACK,KAArC,CAA4CL,SAAS,CAACM,MAAtD,EACD,CACF,CAJD,IAIO,IAAIN,SAAS,CAACE,IAAV,GAAmB,gBAAvB,CAAyC,CAC9C,GAAI,KAAKC,KAAL,CAAWI,gBAAf,CAAiC,CAC/B,KAAKJ,KAAL,CAAWI,gBAAX,GACD,CACF,CACF,C,uCAEQ,CACP,MACE,qBAAC,gBAAD,0BACM,KAAKJ,KADX,EAEE,QAAQ,CAAE,KAAKK,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAFZ,8DADF,CAMD,C,yBA/DuBC,KAAK,CAACC,S,+BAA1Bb,W,wBAkEN,GAAMc,CAAAA,MAAM,CAAGC,wBAAWC,MAAX,CAAkB,CAC/BC,kBAAkB,CAAE,CAClBC,MAAM,CAAE,EADU,CAElBC,KAAK,CAAE,GAFW,CADW,CAAlB,CAAf,CAOAnB,WAAW,CAACoB,YAAZ,CAA2B,CACzBC,KAAK,CAAEP,MAAM,CAACG,kBADW,CAA3B,CAIA,GAAMK,CAAAA,gBAAgB,CAAG,wCAA4B,kBAA5B,CAAzB,CAEAC,MAAM,CAACC,OAAP,CAAiBxB,WAAjB","sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.\n *\n * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,\n * copy, modify, and distribute this software in source code or binary form for use\n * in connection with the web services and APIs provided by Facebook.\n *\n * As with any software that integrates with the Facebook platform, your use of\n * this software is subject to the Facebook Developer Principles and Policies\n * [http://developers.facebook.com/policy/]. This copyright notice shall be\n * included in all copies or substantial portions of the software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n *\n * @flow\n * @format\n */\n'use strict';\n\nimport * as React from 'react';\nimport {requireNativeComponent, StyleSheet} from 'react-native';\n\nimport type {\n  DefaultAudience,\n  LoginBehaviorAndroid,\n  LoginResult,\n} from './FBLoginManager';\n\ntype Event = Object;\ntype TooltipBehaviorIOS = 'auto' | 'force_display' | 'disable';\n\n/**\n * A button that initiates a log in or log out flow upon tapping.\n */\nclass LoginButton extends React.Component<{\n  /**\n   * Represents the permissions to request when the login button\n   * is pressed.\n   */\n  permissions?: Array<string>,\n\n  /**\n   * The callback invoked upon error/completion of a login request.\n   */\n  onLoginFinished?: (error: Object, result: LoginResult) => void,\n\n  /**\n   * The callback invoked upon completion of a logout request.\n   */\n  onLogoutFinished?: () => void,\n\n  /**\n   * The behavior to use when attempting a login.\n   * @platform android\n   */\n  loginBehaviorAndroid?: LoginBehaviorAndroid,\n\n  /**\n   * The default audience to target when attempting a login.\n   */\n  defaultAudience?: DefaultAudience,\n\n  /**\n   * For iOS only, the desired tooltip behavior.\n   * @platform ios\n   */\n  tooltipBehaviorIOS?: TooltipBehaviorIOS,\n\n  /**\n   * View style, if any.\n   */\n  style?: any,\n}> {\n  static defaultProps: {\n    style: typeof styles.defaultButtonStyle,\n  };\n\n  _eventHandler(event: Event) {\n    const eventDict = event.nativeEvent;\n    if (eventDict.type === 'loginFinished') {\n      if (this.props.onLoginFinished) {\n        this.props.onLoginFinished(eventDict.error, eventDict.result);\n      }\n    } else if (eventDict.type === 'logoutFinished') {\n      if (this.props.onLogoutFinished) {\n        this.props.onLogoutFinished();\n      }\n    }\n  }\n\n  render() {\n    return (\n      <RCTFBLoginButton\n        {...this.props}\n        onChange={this._eventHandler.bind(this)}\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  defaultButtonStyle: {\n    height: 30,\n    width: 190,\n  },\n});\n\nLoginButton.defaultProps = {\n  style: styles.defaultButtonStyle,\n};\n\nconst RCTFBLoginButton = requireNativeComponent<any>('RCTFBLoginButton');\n\nmodule.exports = LoginButton;\n"]}