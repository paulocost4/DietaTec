{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/paulo/Documentos/Codigos/Projetos/DietaTec/DietaTec/src/pages/login/FBLoginButton.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport { LoginButton } from 'react-native-fbsdk';\n\nvar FBLoginButton = function (_Component) {\n  _inherits(FBLoginButton, _Component);\n\n  var _super = _createSuper(FBLoginButton);\n\n  function FBLoginButton() {\n    _classCallCheck(this, FBLoginButton);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(FBLoginButton, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 8,\n          columnNumber: 7\n        }\n      }, React.createElement(LoginButton, {\n        publishPermissions: [\"email\"],\n        onLoginFinished: function onLoginFinished(error, result) {\n          if (error) {\n            alert(\"Login failed with error: \" + error.message);\n          } else if (result.isCancelled) {\n            alert(\"Login was cancelled\");\n          } else {\n            alert(\"Login was successful with permissions: \" + result.grantedPermissions);\n          }\n        },\n        onLogoutFinished: function onLogoutFinished() {\n          return alert(\"User logged out\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return FBLoginButton;\n}(Component);\n\nexport { FBLoginButton as default };\n;","map":{"version":3,"sources":["/home/paulo/Documentos/Codigos/Projetos/DietaTec/DietaTec/src/pages/login/FBLoginButton.js"],"names":["React","Component","LoginButton","FBLoginButton","error","result","alert","message","isCancelled","grantedPermissions"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,SAASC,WAAT,QAA4B,oBAA5B;;IAEqBC,a;;;;;;;;;;;;;6BACV;AACP,aACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,WAAD;AACE,QAAA,kBAAkB,EAAE,CAAC,OAAD,CADtB;AAEE,QAAA,eAAe,EACb,yBAACC,KAAD,EAAQC,MAAR,EAAmB;AACjB,cAAID,KAAJ,EAAW;AACTE,YAAAA,KAAK,CAAC,8BAA8BF,KAAK,CAACG,OAArC,CAAL;AACD,WAFD,MAEO,IAAIF,MAAM,CAACG,WAAX,EAAwB;AAC7BF,YAAAA,KAAK,CAAC,qBAAD,CAAL;AACD,WAFM,MAEA;AACLA,YAAAA,KAAK,CAAC,4CAA4CD,MAAM,CAACI,kBAApD,CAAL;AACD;AACF,SAXL;AAaE,QAAA,gBAAgB,EAAE;AAAA,iBAAMH,KAAK,CAAC,iBAAD,CAAX;AAAA,SAbpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAkBD;;;;EApBwCL,S;;SAAtBE,a;AAqBpB","sourcesContent":["import React, { Component } from 'react';\nimport { View } from 'react-native';\nimport { LoginButton } from 'react-native-fbsdk';\n\nexport default class FBLoginButton extends Component {\n  render() {\n    return (\n      <View>\n        <LoginButton\n          publishPermissions={[\"email\"]}\n          onLoginFinished={\n            (error, result) => {\n              if (error) {\n                alert(\"Login failed with error: \" + error.message);\n              } else if (result.isCancelled) {\n                alert(\"Login was cancelled\");\n              } else {\n                alert(\"Login was successful with permissions: \" + result.grantedPermissions)\n              }\n            }\n          }\n          onLogoutFinished={() => alert(\"User logged out\")}/>\n      </View>\n    );\n  }\n};\n"]},"metadata":{},"sourceType":"module"}